
openapi: 3.0.0
info:
  title: User Management API
  version: 1.0.0
paths:
  /users:
    get:
      summary: Get a list of users
      parameters:
        - in: query
          name: search
          schema:
            type: string
          description: Search term to filter users by name, surname, or email.
        - in: query
          name: deleted
          schema:
            type: boolean
          description: Include soft-deleted users in the response.
        - in: query
          name: sort
          schema:
            type: string
          description: Sort users by fieldName:order (e.g., 'name:ASC', 'surname:DESC').
      responses:
        '200':
          description: A JSON array of user objects
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    surname:
                      type: string
                    email:
                      type: string
                    deleted:
                      type: boolean
        '400':
          description: Invalid query parameters
        '404':
          description: No users found
    post:
      summary: Create a new user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                surname:
                  type: string
                email:
                  type: string
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  surname:
                    type: string
                  email:
                    type: string
        '400':
          description: Invalid request body
  /users/{id}:
    get:
      summary: Get a user by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A user object
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  surname:
                    type: string
                  email:
                    type: string
                  deleted:
                    type: boolean
        '400':
          description: Invalid ID format
        '404':
          description: User not found
    put:
      summary: Update a user by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                surname:
                  type: string
                email:
                  type: string
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  surname:
                    type: string
                  email:
                    type: string
        '400':
          description: Invalid request body or ID format
        '404':
          description: User not found
    delete:
      summary: Soft delete a user by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: User deleted successfully
        '400':
          description: Invalid ID format
        '404':
          description: User not found
